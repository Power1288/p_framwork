---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ll.
--- DateTime: 14/11/2021 14:16
---

pfw.createSociety = function(name,argDepart)
    if not name then
        print("ERREUR Nom indefini")
        return
    end
    if not argDepart then
        print("ERREUR argDepart indefini")
        return
    end
    if type(tonumber(argDepart)) ~= "number"then
        print("ERREUR montant invalide")
        return
    end
    exports.mongodb:findOne({ collection="society_infos", query = { name = name } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error in findOne: "..tostring(result))
            return
        end
        if result[1] then
            print("Société deja crée")
            return
        end
        exports.mongodb:insertOne({ collection="society_infos", document = { name = name, argent = argDepart} }, function (success, result, insertedIds)
            if not success then
                print("[MongoDB][Example] Error in insertOne: "..tostring(result))
                return
            end
            print("[MongoDB][Example] societé crée avec succes."..tostring(insertedIds[1]))
        end)
    end)
end

pfw.getSocietyMoney = function(society,cb)
    if not society then
        print("ERREUR SOCIETER Invalide")
        return
    end
    exports.mongodb:findOne({ collection="society_infos", query = { name = society } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error in findOne: "..tostring(result))
            return
        end
        if not result[1] then
            print("ERREUR Sociéter invalid")
            return
        end
        cb(result[1].argent)
    end)
end



pfw.depositMoneySociety = function(montant,society,source)
    exports.mongodb:findOne({ collection="society_infos", query = { name = society } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error in findOne: "..tostring(result))
            return
        end
        if not result[1] then
            print("ERREUR Sociéter invalid")
            return
        end
        local newMontant = result[1].argent + montant
        TriggerClientEvent('pf:sendSocietyMoney',source,newMontant)
        exports.mongodb:updateOne({ collection="society_infos", query = { _id = result[1]._id }, update = { ["$set"] = { argent = newMontant} } })
    end)
end

pfw.retireMoneySociety = function(montant,society,source)
    exports.mongodb:findOne({ collection="society_infos", query = { name = society } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error in findOne: "..tostring(result))
            return
        end
        if not result[1] then
            print("ERREUR Sociéter invalid")
            return
        end
        if result[1].argent - montant >= 0 then
            local newMontant = result[1].argent - montant
            exports.mongodb:updateOne({ collection="society_infos", query = { _id = result[1]._id }, update = { ["$set"] = { argent = newMontant} } })
            TriggerClientEvent("pf:showNotificattion",source,("Vous avez retirer %s $ de votre entreprise"):format(montant))
            TriggerClientEvent('pf:sendSocietyMoney',source,newMontant)

        else
            TriggerClientEvent("pf:showNotificattion",source,"fond inssufisant")
        end
    end)
end

pfw.getEmployer = function(society,cb)
    local employer = {}
    if not society then
        print("ERREUR SOCIETER Invalide")
        return
    end
    exports.mongodb:find({ collection="users_infos", query = { job = society } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error in findOne: "..tostring(result))
            return
        end
        if not result[1] then
            print("ERREUR Sociéter introuvable")
            return
        end
        for k,v in pairs(result) do
            table.insert(employer,{name = v.name , grade = v.grade})
        end
        cb(employer)
    end)
end

