---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ll.
--- DateTime: 14/11/2021 21:21
---
---



RegisterNetEvent("pf:setinfousers")
AddEventHandler("pf:setinfousers",function()
    local source = source
    exports.mongodb:findOne({ collection="users_infos", query = { identifier = GetPlayerIdentifier(source) } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error de recherche infos users: "..tostring(result))
            return
        end
        if not result[1] then
            print("[portefeuilll] introuvable")
            exports.mongodb:insertOne({ collection="users_infos", document = { identifier = GetPlayerIdentifier(source) , money = config.startInCash ,moneyBank = config.startInBank,name = GetPlayerName(source)} }, function (success, result, insertedIds)
                if not success then
                    print("[MongoDB][Example] Error in insertOne: "..tostring(result))
                    return
                end
                print("[MongoDB][Portefeuille crée])"..tostring(insertedIds[1]))
            end)
        end
        TriggerClientEvent("pf:SendInfoMoney",source,config.startInCash)
        TriggerClientEvent("pf:SendInfoMoneyçbank",source,config.startInBank)
    end)
end)

RegisterNetEvent("pf:getMoneyInfo")
AddEventHandler("pf:getMoneyInfo",function()
    local source = source
    exports.mongodb:findOne({ collection="users_infos", query = { identifier = GetPlayerIdentifier(source) } }, function (success, result)
        if not success then
            print("[MongoDB][Example] Error de recherche infos users: "..tostring(result))
            return
        end
        if not result[1] then
            print("[utilisateur] introuvable")
            return
        end
        print(type(result[1].money))
        TriggerClientEvent("pf:SendInfoMoney",source,result[1].money)
        TriggerClientEvent("pf:SendInfoMoneyçbank",source,result[1].moneyBank)
    end)
end)


RegisterNetEvent("pf:societyRetireMoney")
AddEventHandler("pf:societyRetireMoney",function(montant,society)
    local source = source

    pfw.getjob(source,function(job)
        if job ~= society then
            DropPlayer(source,"Le cheat est interdit")
            return
        end
        pfw.getGrade(source,function(grade)
            if grade ~= "boss" then
                DropPlayer(source,"Le cheat est interdit")
                return
            end
        end)
    end)
    pfw.addMoney(source,montant)
    pfw.retireMoneySociety(montant,society,source)
end)

RegisterNetEvent("pf:getSocietyMoney")
AddEventHandler("pf:getSocietyMoney",function(society)
    local source = source
    pfw.getSocietyMoney(society,function(money)
        TriggerClientEvent('pf:sendSocietyMoney',source,money)
    end)
end)

RegisterNetEvent("pf:societyDepositMoney")
AddEventHandler("pf:societyDepositMoney",function(montant,society)
    local source = source

    pfw.getjob(source,function(job)
        if job ~= society then
            DropPlayer(source,"Le cheat est interdit")
            return
        end
        pfw.getGrade(source,function(grade)
            if grade ~= "boss" then
                DropPlayer(source,"Le cheat est interdit")
                return
            end
        end)
    end)
    pfw.getMoney(source,function(money)
        if tonumber(money) >= tonumber(montant) then
            pfw.depositMoneySociety(montant,society,source)
            TriggerClientEvent("pf:showNotificattion",source,("Vous avez deposer %s $ dans votre entreprise"):format(montant))
            pfw.removeMoney(source,montant)
        end
    end)

end)

RegisterNetEvent("GetJobUser")
AddEventHandler("GetJobUser",function()
    local source = source
    pfw.getjob(source,function(job)
        pfw.getGrade(source,function(grade)
            TriggerClientEvent("pf:senduserjob",source,job,grade)
        end)
    end)
end)

RegisterNetEvent("GetGangUser")
AddEventHandler("GetGangUser",function()
    local source = source
    pfw.getgang(source,function(gang)
        pfw.getGangGrade(source,function(grade)
            TriggerClientEvent("pf:senduserGang",source,gang,grade)
        end)
    end)
end)

RegisterNetEvent("setDefaultJob")
AddEventHandler("setDefaultJob",function()
    local source = source
    exports.mongodb:findOne({collection="users_infos",query = {identifier = GetPlayerIdentifier(source)}},function(succes,result)
        if not succes then
            print("^2[ERROR] Recherche du job non succes")
            return
        end
        if not result[1] then
            return
        end
        if result[1].job then
            return
        end
        exports.mongodb:updateOne({ collection="users_infos", query = { _id = result[1]._id }, update = { ["$set"] = { job = "unemployed", grade = 0 } } })
        print("^2[MongoDb] Job crée avec succes")
    end)
end)

RegisterNetEvent("pf:getEnployerSociety")
AddEventHandler("pf:getEnployerSociety",function(society)
    local source = source
    pfw.getEmployer(society,function(employer)
        TriggerClientEvent("pf:sendSocietyEmployer",source,employer)
    end)
end)